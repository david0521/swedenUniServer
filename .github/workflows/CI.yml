name: CI/CD Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create dir
        run: mkdir TestArtifacts

      - name: Node Installation
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Dependency Installation
        run: npm install

      - name: "Setup .env file"
        run: |
          touch .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> .env
          echo "HOST_PASSWORD=${{ secrets.HOST_PASSWORD }}" >> .env
          echo "HOST_ID=${{ secrets.HOST_ID }}" >> .env
          echo "HOST_EMAIL=${{ secrets.HOST_EMAIL }}" >> .env
          echo "ENCRYPTION_SECRET=${{ secrets.ENCRYPTION_SECRET }}" >> .env
          echo "RAPID_API_KEY=${{ secrets.RAPID_API_KEY }}" >> .env
          cat .env

      - name: Newman Installation
        run: |
          npm install -g newman
          npm install -g newman-reporter-slackreporter
          npm install -g newman-reporter-htmlextra

      - name: Start Server
        run: |
          npm run start &
          sleep 3

      - name: Run Auth Tests
        run: |
          cd src/PostmanCollection
          newman run "Authorization.postman_collection.json" -e "test.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export ../../TestArtifacts/AuthorizationReport.html

      - name: Run University Tests
        run: |
          cd src/PostmanCollection
          newman run "University.postman_collection.json" -e "test.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export ../../TestArtifacts/UniversityReport.html

      - name: Run Record Tests
        run: |
          cd src/PostmanCollection
          newman run "Record.postman_collection.json" -e "test.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export ../../TestArtifacts/RecordReport.html

      - name: Run Program Tests
        run: |
          cd src/PostmanCollection
          newman run "Program.postman_collection.json" -e "test.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export ../../TestArtifacts/ProgramReport.html

      - name: Run User Tests
        run: |
          cd src/PostmanCollection
          newman run "User.postman_collection.json" -e "test.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export ../../TestArtifacts/UserReport.html

      - name: Output Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Reports
          path: TestArtifacts

      # Deploy steps
      - name: Add VM to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
          
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Copy .env to VM
        run: |
          scp .env ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/swedenUniServer
          
      - name: Copy files to VM
        run: |
          scp -r ./* ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/swedenUniServer

      - name: SSH into VM and deploy
        run: |
          ssh ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} << 'EOF'
            cd /home/${{ secrets.VM_USERNAME }}/swedenUniServer
            npm install
            npm run build
            pm2 restart your-app
            exit
          EOF
